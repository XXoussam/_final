security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Client
                property: email
        responsible_account_provider:
            entity:
                class: App\Entity\ResponsibleAccount
                property: email
        responsible_clientele_provider:
            entity:
                class: App\Entity\ResponsibleClientele
                property: email
        responsible_investment_provider:
            entity:
                class: App\Entity\ResponsibleInvestment
                property: email
        responsible_loan_provider:
            entity:
                class: App\Entity\ResponsibleLoan
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\ClientAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                target: app_login

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                always_remember_me: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/financialHub.com/home, roles: ROLE_ADMIN }
        - { path: ^/financialHub.com/client/*, roles: ROLE_CLIENT }
        - { path: ^/financialHub.com/crypto/*, roles: ROLE_CLIENT }
        - { path: ^//financialHub.com/reclamtion/*, roles: ROLE_CLIENT }
        - { path: ^//financialHub.com/responsible/account/home, roles: ROLE_RESPONSIBLE_ACCOUNT }
        - { path: ^/financialHub.com/responsible/clientele/home, roles: ROLE_RESPONSIBLE_CLIENTELE }
        - { path: ^/financialHub.com/responsible/investment/home, roles: ROLE_RESPONSIBLE_INVESTMENT }
        - { path: ^//financialHub.com/loan_management/*, roles: ROLE_RESPONSIBLE_INVESTMENT }
        - { path: ^/financialHub.com/responsible/loan/home, roles: ROLE_RESPONSIBLE_LOAN }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
